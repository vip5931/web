import 'dotenv/config'
import { connectDatabase, sequelize } from '../config/database'

const checkMenuPaths = async () => {
  try {
    console.log('üîç Checking menu paths...')

    // ËøûÊé•Êï∞ÊçÆÂ∫ì
    await connectDatabase()

    // Êü•ÁúãÊâÄÊúâËèúÂçïÁöÑË∑ØÂæÑ
    const [menus] = await sequelize.query(`
      SELECT id, name, code, path, parent_id 
      FROM menu_permissions 
      WHERE status = 'active'
      ORDER BY parent_id IS NULL DESC, parent_id, sort
    `)

    console.log('\nüìã Current menu paths:')
    console.log('================================')
    
    if (Array.isArray(menus) && menus.length > 0) {
      menus.forEach((menu: any) => {
        const level = menu.parent_id ? '  ' : ''
        console.log(`${level}${menu.name} (${menu.code}): ${menu.path || 'NO PATH'}`)
      })
    }

    // Ê£ÄÊü•ÊòØÂê¶ÊúâË∑ØÂæÑÈóÆÈ¢ò
    const menusWithoutPath = (menus as any[]).filter(menu => !menu.path)
    if (menusWithoutPath.length > 0) {
      console.log('\n‚ö†Ô∏è  Menus without path:')
      menusWithoutPath.forEach(menu => {
        console.log(`- ${menu.name} (${menu.code})`)
      })
    }

    // ‰øÆÂ§ç‰∏Ä‰∫õÂ∏∏ËßÅÁöÑË∑ØÂæÑÈóÆÈ¢ò
    console.log('\nüîß Fixing common path issues...')

    // ‰øÆÂ§çÁî®Êà∑ÁÆ°ÁêÜË∑ØÂæÑ
    await sequelize.query(`
      UPDATE menu_permissions 
      SET path = '/users' 
      WHERE code = 'system:users' AND (path IS NULL OR path = '/system/users')
    `)

    // ‰øÆÂ§çÊùÉÈôêÁÆ°ÁêÜË∑ØÂæÑ
    await sequelize.query(`
      UPDATE menu_permissions 
      SET path = '/game-permissions' 
      WHERE code = 'system:permissions' AND (path IS NULL OR path = '/system/permissions')
    `)

    // ‰øÆÂ§çÁ≥ªÁªüÁÆ°ÁêÜË∑ØÂæÑÔºàÁà∂ËèúÂçïÈÄöÂ∏∏‰∏çÈúÄË¶ÅË∑ØÂæÑÔºâ
    await sequelize.query(`
      UPDATE menu_permissions 
      SET path = NULL 
      WHERE code = 'system' AND parent_id IS NULL
    `)

    console.log('‚úÖ Menu paths checked and fixed!')

    // ÈáçÊñ∞Êü•Áúã‰øÆÂ§çÂêéÁöÑË∑ØÂæÑ
    const [updatedMenus] = await sequelize.query(`
      SELECT id, name, code, path, parent_id 
      FROM menu_permissions 
      WHERE status = 'active'
      ORDER BY parent_id IS NULL DESC, parent_id, sort
    `)

    console.log('\nüìã Updated menu paths:')
    console.log('================================')
    
    if (Array.isArray(updatedMenus) && updatedMenus.length > 0) {
      updatedMenus.forEach((menu: any) => {
        const level = menu.parent_id ? '  ' : ''
        console.log(`${level}${menu.name} (${menu.code}): ${menu.path || 'NO PATH (Parent Menu)'}`)
      })
    }

    process.exit(0)
  } catch (error) {
    console.error('‚ùå Error checking menu paths:', error)
    process.exit(1)
  }
}

checkMenuPaths()
