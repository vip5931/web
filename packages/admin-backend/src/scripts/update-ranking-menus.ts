import 'dotenv/config'
import { connectDatabase, sequelize } from '../config/database'

const updateRankingMenus = async () => {
  try {
    console.log('üèÜ Updating ranking management menus...')

    // ËøûÊé•Êï∞ÊçÆÂ∫ì
    await connectDatabase()

    // 1. Âà†Èô§ÊóßÁöÑÊï∞ÊçÆÁÆ°ÁêÜÁõ∏ÂÖ≥ËèúÂçï
    console.log('üóëÔ∏è Removing old data management menus...')
    await sequelize.query(`
      DELETE FROM menu_permissions 
      WHERE code IN ('data', 'data:import', 'data:export')
    `)

    // 2. Ê∏ÖÁêÜÁé∞ÊúâÁöÑÊéíË°åÊ¶úËèúÂçï
    await sequelize.query(`
      DELETE FROM menu_permissions 
      WHERE code LIKE 'ranking%'
    `)

    // 3. ÊèíÂÖ•Êñ∞ÁöÑÊéíË°åÊ¶úÁÆ°ÁêÜËèúÂçï
    console.log('üìã Adding new ranking management menus...')
    
    const menus = [
      // ‰∏ªËèúÂçï
      ['ÊéíË°åÊ¶úÁÆ°ÁêÜ', 'ranking', '/ranking', null, 'TrophyOutlined', null, 2],
      
      // Â≠êËèúÂçï - Áé©ÂÆ∂ÊéíË°å
      ['Áé©ÂÆ∂ÊéíË°å', 'ranking:player', '/ranking/player', 'PlayerRankingView', null, null, 1],
      
      // Â≠êËèúÂçï - Èó®Ê¥æÊéíË°å  
      ['Èó®Ê¥æÊéíË°å', 'ranking:school', '/ranking/school', 'SchoolRankingView', null, null, 2]
    ]

    for (const menu of menus) {
      const [name, code, path, component, icon, parentId, sort] = menu
      
      // Â¶ÇÊûúÊòØÂ≠êËèúÂçïÔºåÈúÄË¶ÅÊâæÂà∞Áà∂ËèúÂçïID
      let actualParentId = parentId
      if (code.includes(':')) {
        const [parentResult] = await sequelize.query(`
          SELECT id FROM menu_permissions WHERE code = 'ranking' LIMIT 1
        `)
        if (parentResult && (parentResult as any[]).length > 0) {
          actualParentId = (parentResult as any[])[0].id
        }
      }

      await sequelize.query(`
        INSERT INTO menu_permissions (name, code, path, component, icon, parent_id, sort, status) 
        VALUES (?, ?, ?, ?, ?, ?, ?, 'active')
      `, { 
        replacements: [name, code, path, component, icon, actualParentId, sort] 
      })
    }

    console.log('‚úÖ Ranking management menus updated successfully!')

    // 4. ÊòæÁ§∫Êõ¥Êñ∞ÂêéÁöÑËèúÂçïÁªìÊûÑ
    console.log('\nüìã Updated menu structure:')
    const [allMenus] = await sequelize.query(`
      SELECT id, name, code, path, parent_id, sort 
      FROM menu_permissions 
      ORDER BY parent_id IS NULL DESC, parent_id, sort
    `)

    const buildMenuTree = (menus: any[], parentId: number | null = null, level = 0): void => {
      const children = menus.filter(m => m.parent_id === parentId)
      children.forEach(menu => {
        const indent = '  '.repeat(level)
        console.log(`${indent}- ${menu.name} (${menu.code}) - ${menu.path || 'No path'}`)
        buildMenuTree(menus, menu.id, level + 1)
      })
    }

    buildMenuTree(allMenus as any[])

    process.exit(0)
  } catch (error) {
    console.error('‚ùå Error updating ranking menus:', error)
    process.exit(1)
  }
}

updateRankingMenus()
